#+TITLE:     X.Files: Notes
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: Notes on dotfiles

* Notes
** To Generate (initially)

With shell

+ Use =C-u M-!= to run =shell-command= with output
+ Then =tree -L 2 /data/ecto/x.files/= then =query-replace-regexp= in emacs.
  - use =C-q C-j= to insert newlines in your regexp/replace

** To link to org-roam

+ enable links in org-roam and make a soft/hard link. If it's a hardlink in two
  git repos, you gonna have problems.

** To make notes

+ Add the file to your org-refile paths and setup a capture template.
+Browse the source code and refile from there.

** To Update

... well this requires command over =org-ql= or =org-element=.


+ Keeping the existing notes still probably requires =org-element=.
+ it may be worthwhile to iterate over the headlines and generate a hash (or use
  =org-id-get-create=) but sourcing some =xpath= query /should/ guarantee
  uniqueness).

+ Using the =default.xml= file as input would be preferable to =tree=, though
  the command has options for XML/JSON output and even HTML.

+ Has anyone else wondered why Google's =repo= is so underrated? ... or why tf
  we need =jq= when json is degenerate?
  - Sorry, my opinions are opinions: i can imagine you don't want XML parsing to
    be ubiquitous on the commandline for security reasons, but JSON _cannot_
    model concepts like XML can. It just can't. It also doesn't "protobuf" very
    well. bson doesn't count. JSON is inferior and the only reason it's
    ubiquitous is because javascript programmers brought it with them. Leave the
    javascript things in the browser, please. The language was designed to fit a
    niche and it does /that/ very well. Do you see emacs-lisp everywhere? So why
    are 13 electron apps running on my desktop? GTFO.


* Dotfiles

**  abo-abo
*** emacs


**  aborn
*** dotfiles
*** space

**  abougouffa
*** dotfiles


**  akagi
*** dotfiles


**  alezost
*** dotfiles
*** emacs
*** shell


**  ambrevar
*** dotfiles


**  bamos
*** dotfiles


**  bbatsov
*** emacs


**  benmezger
*** dotfiles


**  blejdfist
*** dotfiles


**  BonfaceKilz
*** emacs


**  Brettm12345
*** emacs


**  BVollmerhaus
*** dotfiles


**  cjbassi
*** dotfiles


**  daedreth
*** emacs


**  daviwil
*** dotfiles
*** emacs


**  dcunited001

Occasionally creative, but copies a lot of shit. Not sure if crazy or just stupid.

*** dotfiles
*** emacs


**  dfeich
*** emacs-course
*** emacs-course-and-config
*** org-babel-examples


**  DiamondBond
*** bin
*** dotfiles
*** emacs
:PROPERTIES:
:UPDATED_AT: <2023-03-17 Fri>
:END:

+ gtags :: [[https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwittbGYpOT9AhU8ElkFHZRxASkQFnoECBwQAQ&url=https%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fglobal%2F&usg=AOvVaw175eUEq5Mut3XINEIy7-dL][Gnu Global]] tags ([[https://www.gnu.org/software/global/manual/global.html][manual]])
  - didn't know about these
+ GNUS :: a pretty complete GNUS config
+ embark preview at point mode :: hmmm do i need this?
+ compile mode :: i still need to configure langs/builds
+ wild alert notifier :: hook your org-agenda-files into your system's alerts system
  - this will be helpful, though it would be tough to manage
  - this package is a great example of why you should manually manage your
    =org-agenda-files=
other configs new/interesting to me:

+ Emacs has an SICP package and the book is available via Info
+ web-mode
+ java-mode
+ ERC
+ dashboard: a non-doom dashboard. Doesn't really fit my workflow
+ run-in-vterm
+ indent-guides: i feel like these could be slow, like the VC fringe feature. I
  would use them or at least alphapapa's prism-mode for lisps, but i'm fine on
  this for now. I forgot about them though.
+ [ ] xah-math-input
+ [ ] init-completion-predicate
+ [ ] nov: read epubs on emacs
+ [ ] pdf-tools: i need to get these back again
+ academic-phrases: I didn't know about this book. this is a good resource.
+ [ ] corfu-separator :: do I need this?

**  dpgraham4401
*** dotfiles


**  dwt1
*** bin
*** dotfiles
*** dwm


**  ergoemacs
*** emacs


**  frap
*** emacs


**  geolessel
*** dotfiles


**  gtrunsec
*** dotfiles


**  HaoZeke
*** doom
*** dotfiles


**  hlissner
*** doom
*** dotfiles


**  hsinhaoyu
*** doom


**  isti115
*** dotfiles


**  jethrokuan
*** dotfiles
*** org


**  jkitchin
*** emacs


**  Jorengarenar
*** dotfiles


**  joseph8th
*** emacs


**  jsoo1
*** dotfiles


**  karthink
*** emacs


**  kitnil
*** dotfiles


**  krevedkokun
*** dotfiles


**  kubemacs
*** emacs


**  lccambiaghi
*** doom
*** emacs


**  LukeSmithxyz
*** dotfiles


**  magnars
*** emacs


**  MatthewZMD
*** emacs


**  maximbaz
*** dotfiles


**  MenkeTechnologies
*** zpwr


**  michal_atlas
*** dotfiles


**  monkeyjunglejuice
*** emacs


**  mwfogleman
*** emacs


**  Nekoyuki
*** cheatsheets
*** dotfiles


**  nicolas-graves
*** dotfiles


**  novoid
*** emacs


**  ocodo
*** emacs


**  phundrak
*** dotfiles


**  plattfot
*** emacs
*** emacs-plt


**  progfolio
*** emacs


**  protesilaos
*** dotfiles


**  purcell
*** emacs


**  rasendubi
*** emacs


**  sachac
*** emacs


**  Scrumplex
*** dotfiles


**  sistematico
*** dotfiles


**  sunnyhasija
*** doom


**  tammymakesthings
*** emacs


**  tecosaur
*** doom


**  thiagowfx
*** dotfiles


**  TimQuelch
*** doom


**  tuhdo
*** emacs


**  ubolonton
*** dotfiles
*** emacs


**  whitelynx
*** dotfiles


**  zamansky
*** emacs

** zzamboni
*** doom
